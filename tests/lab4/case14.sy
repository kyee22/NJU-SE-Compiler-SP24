// 全局变量声明和定义
const int GLOBAL_CONST1 = 15;
const int GLOBAL_CONST2 = 8;
const int GLOBAL_CONST3 = 3;
int globalVar1 = 50;
int globalVar2 = 35;

// 主函数
int main() {
    // 局部变量声明和定义
    int x = 12;
    int y = 24;
    int z = 36;
    int w = 48;
    int u = 60;
    int v = 72;
    int m = 84;
    int n = 96;
    int p = 108;
    int q = 120;
    int r = 132;
    int s = 144;
    int t = 156;
    int l = 168;
    int o = 180;
    int a = 192;
    int b = 204;
    int c = 216;
    int d = 228;
    int e = 240;
    int f = 252;

    // 运算过程
    int temp1 = (x + y) * (z / w); // (12 + 24) * (36 / 48) = 36 * 0 = 0
    int temp2 = (GLOBAL_CONST1 * x + y) / (u / v); // (15 * 12 + 24) / (60 / 72) = (180 + 24) / 0.833 = 204 / 0.833 ≈ 244
    int temp3 = (GLOBAL_CONST2 + (w * (x / y))) % (GLOBAL_CONST3 + 1); // (8 + (48 * (12 / 24))) % (3 + 1) = (8 + (48 * 0.5)) % 4 = (8 + 24) % 4 = 32 % 4 = 0
    int temp4 = (-(x - y) * GLOBAL_CONST1 + (v / u)) / (w / z); // (-(12 - 24) * 15 + (72 / 60)) / (48 / 36) = (12 * 15 + 1.2) / 1.333 = 181.2 / 1.333 ≈ 136
    int temp5 = !(x - GLOBAL_CONST3) * (y / z); // !(12 - 3) * (24 / 36) = !(9) * (0.666) = 0 * 0.666 = 0
    int temp6 = (x * y - GLOBAL_CONST2) + (GLOBAL_CONST1 / w); // (12 * 24 - 8) + (15 / 48) = (288 - 8) + 0.312 = 280.312
    int temp7 = -((z / y) * (GLOBAL_CONST1 - x)) % (v / u); // -((36 / 24) * (15 - 12)) % (72 / 60) = -((1.5 * 3)) % 1.2 = -4.5 % 1.2 = -4.5
    int temp8 = (x + y - z) * (w / GLOBAL_CONST3); // (12 + 24 - 36) * (48 / 3) = 0 * 16 = 0
    int temp9 = (GLOBAL_CONST2 * (x % y) + (z - w)) % (u / v); // (8 * (12 % 24) + (36 - 48)) % (60 / 72) = (8 * 12 - 12) % 0.833 = 84 % 0.833 ≈ 84
    int temp10 = (x * (y - z) + GLOBAL_CONST1) / (w / GLOBAL_CONST2); // (12 * (24 - 36) + 15) / (48 / 8) = (12 * -12 + 15) / 6 = -129 / 6 = -21
    int temp11 = -((x * (y - z) % GLOBAL_CONST3) + (w / u)); // -((12 * (24 - 36) % 3) + (48 / 60)) = -((-144 % 3) + 0.8) = -0.8
    int temp12 = ((x + y) * (GLOBAL_CONST1 - z)) % (w / GLOBAL_CONST2); // ((12 + 24) * (15 - 36)) % (48 / 8) = (36 * -21) % 6 = -756 % 6 = 0
    int temp13 = (GLOBAL_CONST3 + (x / y)) * (z / w); // (3 + (12 / 24)) * (36 / 48) = (3 + 0.5) * 0.75 = 3.5 * 0.75 = 2.625
    int temp14 = -(x + (y - z) * GLOBAL_CONST1) / (w / u); // -(12 + (24 - 36) * 15) / (48 / 60) = -(12 + (-12 * 15)) / 0.8 = -(-168) / 0.8 = 210
    int temp15 = (x % (y + z)) * (GLOBAL_CONST2 - w); // (12 % (24 + 36)) * (8 - 48) = (12 % 60) * (-40) = 12 * (-40) = -480
    int temp16 = (-(x - y) * (z / GLOBAL_CONST3)) % (w / (u / v)); // (-(12 - 24) * (36 / 3)) % (48 / (60 / 72)) = -(-12 * 12) % 48 = 144 % 48 = 0
    int temp17 = (x / (y + GLOBAL_CONST2)) * (z % (w - u)); // (12 / (24 + 8)) * (36 % (48 - 60)) = (12 / 32) * (36 % -12) = 0 * 0 = 0
    int temp18 = (GLOBAL_CONST3 * (x - y) + (z / w)) % (u / v); // (3 * (12 - 24) + (36 / 48)) % (60 / 72) = (3 * -12 + 0.75) % 0.833 = -35.25
    int temp19 = (-(x + GLOBAL_CONST1) * (y - z)) / (w / GLOBAL_CONST2); // (-(12 + 15) * (24 - 36)) / (48 / 8) = -(-27 * -12) / 6 = -324 / 6 = -54
    int temp20 = (x * (y + z) - GLOBAL_CONST3) / (w / (u + v)); // (12 * (24 + 36) - 3) / (48 / (60 + 72)) = (12 * 60 - 3) / (48 / 132) = 717 / 0.36 ≈ 1991
    int temp21 = (GLOBAL_CONST2 - (x % y)) * (z / w); // (8 - (12 % 24)) * (36 / 48) = (8 - 12) * 0.75 = -3 * 0.75 = -2.25
    int temp22 = -(GLOBAL_CONST1 + (x * y) / (z / w)); // -(15 + (12 * 24) / (36 / 48)) = -(15 + 288 / 0.75) = -15 - 384 = -399
    int temp23 = ((x - y) * (GLOBAL_CONST3 + z)) / (w / u); // ((12 - 24) * (3 + 36)) / (48 / 60) = (-12 * 39) / 0.8 = -468 / 0.8 = -585
    int temp24 = (-(x + y) * (z % GLOBAL_CONST1)) / (w / (u + v)); // (-(12 + 24) * (36 % 15)) / (48 / (60 + 72)) = -36 * 6 / 0.36 = -600
    int temp25 = (x * (y - z) - GLOBAL_CONST2) % (w + GLOBAL_CONST1); // (12 * (24 - 36) - 8) % (48 + 15) = -128 % 63 = -2
    int temp26 = (GLOBAL_CONST1 / (x + y)) * (z % (w - u)); // (15 / (12 + 24)) * (36 % (48 - 60)) = (15 / 36) * (36 % -12) = 0
    int temp27 = ((x * y - z) + GLOBAL_CONST3) % (w / (u + v)); // ((12 * 24 - 36) + 3) % (48 / (60 + 72)) = (288 - 36 + 3) % 0.36 = 255
    int temp28 = (-(x + GLOBAL_CONST2) * (y - z)) / (w % v); // (-(12 + 8) * (24 - 36)) / (48 % 72) = (-(20) * (-12)) / 48 = 240 / 48 = 5
    int temp29 = (x % (y * GLOBAL_CONST1) + (z - w)) % (u + v); // (12 % (24 * 15) + (36 - 48)) % (60 + 72) = (12 % 360 + (-12)) % 132 = 0
    int temp30 = (x * (y + z) - GLOBAL_CONST3) / (w % (u + v)); // (12 * (24 + 36) - 3) / (48 % (60 + 72)) = (12 * 60 - 3) / 48 = 717 / 48 = 14

    // 返回值计算
    return (temp1 + temp2 - temp3 * temp4 / (temp5 + temp6)) % 256; // 0 + 244 - 0 * 136 / (0 + 280) % 256 = 244 % 256 = 244
}
